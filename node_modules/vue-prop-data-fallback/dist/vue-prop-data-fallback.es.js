/**
 * vue-prop-data-fallback v1.0.1
 * (c) 2018 Eduardo San Martin Morote <posva13@gmail.com>
 * @license MIT
 */

/**
 * Generates a mixin that creates a prop that fallbacks to local data to enable components
 * to be used both ways, with a prop controlled by the parent, and with no prop
 * @param {string} prop  name of the prop
 * @param {string} [event]  name of the event emitted when modifying the prop. Defaults to 'update:' + prop
 * @param {import('vue').PropOptions} [propOptions = { required: false }]  type or object for the prop
 * @param {{ data: string, computed: string}} [options] options to customize data and computed properties name
 */
function propWithDataFallback (prop, event, propOptions, ref) {
  var obj, obj$1, obj$2;

  if ( ref === void 0 ) ref = {};
  var data = ref.data;
  var computed = ref.computed;
  var initialValue = ref.initialValue;
  var local = data || '_$' + prop;
  propOptions = propOptions || { required: false };
  event = event || 'update:' + prop;

  return {
    props: ( obj = {}, obj[prop] = propOptions, obj),
    data: function (vm) { return (( obj$1 = {}, obj$1[local] = vm[prop] !== undefined ? undefined : initialValue, obj$1)); },
    computed: ( obj$2 = {}, obj$2[computed || '$' + prop] = {
        get: function get () {
          return this[prop] === undefined ? this.$data[local] : this[prop]
        },
        set: function set (value) {
          if (this[prop] === undefined) { this.$data[local] = value; }
          else { this.$emit(event, value); }
        },
      }, obj$2),
  }
}

export { propWithDataFallback };
